#!/usr/bin/env bash

set -e
cd /var/www/stash

role=${CONTAINER_ROLE:-app}
if [[ -z "$APP_ENV" ]]; then
    export APP_ENV=local
    echo -e "\e[33mENV undefined: APP_ENV,\e[0m use default $APP_ENV"
fi

if [[ -z "$DB_CONNECTION" ]]; then
    export DB_CONNECTION=mysql
    echo -e "\e[33mENV undefined: DB_CONNECTION,\e[0m use default $DB_CONNECTION"
fi

if [[ -z "$APP_NAME" ]]; then
    export APP_NAME=Stash
    echo -e "\e[33mENV undefined: APP_NAME,\e[0m use default $APP_NAME"
fi

if [[ -z "$APP_DEBUG" ]]; then
    export APP_DEBUG=true
    echo -e "\e[33mENV undefined: APP_DEBUG,\e[0m use default $APP_DEBUG"
fi

if [[ -z "$DB_HOST" ]]; then
    export DB_HOST=10.0.0.173
    echo -e "\e[33mENV undefined: DB_HOST,\e[0m use default $DB_HOST"
fi 

if [[ -z "$DB_PORT" ]]; then
    export DB_PORT=3306
    echo -e "\e[33mENV undefined: DB_PORT,\e[0m use default $DB_PORT"
fi 

if [[ -z "$DB_DATABASE" ]]; then
    export DB_DATABASE=Stash
    echo -e "\e[33mENV undefined: DB_DATABASE,\e[0m use default $DB_DATABASE"
fi 

if [[ -z "$DB_USERNAME" ]]; then
    export DB_USERNAME=admin
    echo -e "\e[33mENV undefined: DB_USERNAME,\e[0m use default $DB_USERNAME"
fi 

if [[ -z "$DB_PASSWORD" ]]; then
    export DB_PASSWORD=Admin@123
    echo -e "\e[33mENV undefined: DB_PASSWORD,\e[0m use default $DB_PASSWORD"
fi

if [[ -z "$GOOGLE_MAPS_API_KEY" ]]; then
    export GOOGLE_MAPS_API_KEY=AIzaSyBvQwRiAO8ZgiaTXpf9xvfXz3Rnq17AR3s
    echo -e "\e[33mENV undefined: GOOGLE_MAPS_API_KEY,\e[0m use default $GOOGLE_MAPS_API_KEY"
fi

if [[ -z "$APP_KEY" ]]; then
    msg="ENV undefined: APP_KEY"
    if [[ "$APP_ENV" = "local" ]]; then
        APP_KEY=$(php artisan key:generate --show)
        export APP_KEY
        echo -e "\e[33m${msg},\e[0m generated $APP_KEY"
    else
        echo -e "\e[31m${msg}\e[0m"
        exit 1
    fi
fi

if [[ "$APP_ENV" = "local" ]]; then
    cp /usr/local/etc/php/php.ini-development /usr/local/etc/php/php.ini
else
    echo "Caching configuration..."
    php artisan config:cache
    php artisan route:cache
fi

chown www-data:www-data bootstrap/cache
chown -R www-data:www-data storage/
chown -R www-data.www-data /var/www/stash
chmod -R 755 /var/www/stash
chmod -R 777 /var/www/stash/storage


if [[ "$DB_CONNECTION" = "sqlite" ]]; then
    touch database/database.sqlite
    chown -R www-data:www-data database/
fi
php artisan migrate:fresh --seed --force
php artisan storage:link

if [[ "$role" = "app" ]]; then

    exec apache2-foreground

elif [[ "$role" = "scheduler" ]]; then

    echo -e "\e[33mSUGGESTION: use K8s Job instead of docker cron\e[0m"
    echo -e "\e[33m  https://kubernetes.io/docs/concepts/workloads/controllers/job/\e[0m"
    echo "Running the cron..."
    crontab /var/spool/cron/crontabs/root
    cron -f

elif [[ "$role" = "queue" ]]; then

    echo "Running the queue..."
    php artisan queue:work --queue="{default}" --verbose --tries=3 --timeout=90

else
    echo "Could not match the container role: $role"
    exit 1
fi
